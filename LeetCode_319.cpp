class Solution
{
public:

    int bulbSwitch(int n)
    {
        return (int)(sqrt(n));
    }
};

/*

一开始想到了公倍数和容斥原理，但因为复杂度太高且需要枚举而放弃……

后来想到了求一个数的因数个数，去掉 1 且因数是偶数的数，灯一定是开着的……时间复杂度是 O(n^1.5)

再后来查阅资料，发现无需计算因数个数，只需要找出因数的奇偶即可。

因数个数是奇数时，灯亮；否则灯灭……

所有的数中，因数都是成对出现的，只有平方数的因数是奇数……

小于 n 的所有平方数的个数，是 (int)(sqrt(n))，因为小于这个值的数，平方都不会大于 n，而大于这个值的数，平方都大于 n

好傻的我，不过可以继续前行了……

*/
